{"version":3,"sources":["API.js","components/Heading.jsx","components/GameCard.jsx","components/Home.jsx","components/Chat.jsx","components/PlayerList.jsx","components/Settings.jsx","components/WaitingRoom.jsx","components/Timer.jsx","components/Game.jsx","App.jsx","index.js","assets/images/title.png"],"names":["axios","create","baseURL","process","responseType","Heading","className","src","TitleImage","alt","Header","props","children","Card","Body","Footer","GameCard","defaultProps","Home","appUsername","username","appRoomId","roomId","liftUserName","setUsername","setHasStarted","setRoomId","setCreator","joinRoom","useState","history","useHistory","liftStateFromResponse","creator","players","hasStarted","push","handleJoin","e","a","preventDefault","API","get","params","response","data","console","log","success","error","message","handleCreate","post","Container","Row","Col","md","icon","faUserCircle","size","Form","onSubmit","Group","Control","type","placeholder","value","onChange","target","as","Button","variant","faUsers","onClick","Chat","sm","sendMessage","messageList","setMessage","useEffect","messages","document","getElementsByClassName","scrollTop","scrollHeight","map","msg","key","time","xs","PlayerList","header","footer","player","index","points","id","userBox","_id","Settings","liftRounds","setRounds","rounds","Number","isInteger","WaitingRoom","startGame","currentRoom","room","useParams","handleClick","fluid","Timer","roundEnd","currentRound","calculateTimeLeft","timeLeft","Math","floor","Date","getTime","setTimeLeft","timeOut","setTimeout","clearTimeout","faStopwatch","Game","hints","previousPassword","currentPassword","passwordLength","passwordHolder","sendHint","fetchData","solvedBy","hint","setHint","fetch","length","handleSubmit","Array","fill","blank","slice","h","random","toString","disabled","socket","socketio","App","localStorage","getItem","setItem","setPasswordHolder","setCurrentPassword","setPreviousPassword","setHints","setPlayersState","setMessageList","setSolvedBy","setRoundEnd","setCurrentRound","setPasswordLength","setPlayers","ps","sort","b","on","u","m","messageL","concat","hs","sb","c","filter","p","r","emit","useCallback","alert","re","cr","ph","pl","cp","pp","exact","path","render","ReactDOM","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4d4d7593.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  responseType: 'json',\n});\n","import React from 'react';\nimport TitleImage from '../assets/images/title.png';\n\nimport '../assets/css/Heading.css';\n\nfunction Heading() {\n  return (\n    <div className=\"heading\">\n      <div>\n        <img src={TitleImage} alt=\"PASSWORD\" className=\"title-img\" />\n      </div>\n      <div className=\"subtitle\">Guess it to win it!</div>\n    </div>\n  );\n}\n\nexport default Heading;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport propTypes from 'prop-types';\n\nimport '../assets/css/GameCard.css';\n\nfunction Header(props) {\n  const { children, className } = props;\n  return (\n    <Card.Header className={className}>{children}</Card.Header>\n  );\n}\n\nfunction Body(props) {\n  const { children, className } = props;\n  return (\n    <Card.Body className={`display-card-body ${className}`}>{children}</Card.Body>\n  );\n}\n\nfunction Footer(props) {\n  const { children, className } = props;\n  return (\n    <Card.Footer className={className}>{children}</Card.Footer>\n  );\n}\n\nfunction GameCard(props) {\n  const { children, className } = props;\n  return (\n    <Card className={`display-card ${className}`}>{children}</Card>\n  );\n}\n\nconst propType = {\n  children: propTypes.node,\n  className: propTypes.string,\n};\n\nconst defaultProps = {\n  children: <></>,\n  className: '',\n};\n\nHeader.propTypes = propType;\nBody.propTypes = propType;\nFooter.propTypes = propType;\nGameCard.propTypes = propType;\n\nHeader.defaultProps = defaultProps;\nBody.defaultProps = defaultProps;\nFooter.defaultProps = defaultProps;\nGameCard.defaultProps = defaultProps;\n\nGameCard.Body = Body;\nGameCard.Header = Header;\nGameCard.Footer = Footer;\n\nexport default GameCard;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-regular-svg-icons';\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\nimport propTypes from 'prop-types';\n\nimport '../assets/css/Home.css';\n\nimport API from '../API';\nimport Heading from './Heading';\nimport GameCard from './GameCard';\n\nfunction Home(props) {\n  const {\n    username: appUsername,\n    roomId: appRoomId,\n    setUsername: liftUserName,\n    setHasStarted,\n    setRoomId,\n    setCreator,\n    joinRoom,\n  } = props;\n  const [username, setUsername] = useState(appUsername);\n\n  const history = useHistory();\n\n  const handleChange = ({ target }) => setUsername(target.value);\n\n  const liftStateFromResponse = (roomId, creator, players, hasStarted) => {\n    setRoomId(roomId);\n    setCreator(creator);\n    liftUserName(username);\n    setHasStarted(hasStarted);\n    joinRoom(username, roomId, players);\n    history.push(`/play/${roomId}`);\n  };\n\n  const handleJoin = async (e) => {\n    e.preventDefault();\n    const response = (await API.get(`/room/join/${appRoomId}`, { params: { username } })).data;\n    console.log(response);\n    if (!response.success) {\n      console.error(response.message);\n      return;\n    }\n\n    const {\n      roomId,\n      creator,\n      players,\n      hasStarted,\n    } = response.message;\n    liftStateFromResponse(roomId, creator, players, hasStarted);\n  };\n\n  const handleCreate = async (e) => {\n    e.preventDefault();\n    try {\n      const response = (await API.post('/room/create', { username })).data;\n\n      if (!response.success) {\n        console.error(response.message);\n        return;\n      }\n\n      const { roomId, creator, players } = response.message;\n      liftStateFromResponse(roomId, creator, players);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container className=\"card-holder\">\n      <Heading />\n      <Row className=\"justify-content-center\">\n        <Col md=\"5\" className=\"d-flex flex-column justify-content-between home-card\">\n          <GameCard className=\"card-top mb-3\">\n            <GameCard.Body className=\"d-flex flex-column justify-content-around\">\n              <div className=\"text-center\">\n                <FontAwesomeIcon icon={faUserCircle} size=\"4x\" />\n                <div className=\"subtitle mt-1\">Choose your Avatar!</div>\n              </div>\n              <Form className=\"mt-2\" onSubmit={handleJoin}>\n                <Form.Group>\n                  <Form.Control type=\"text\" placeholder=\"Username\" value={username} onChange={handleChange} />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Control as=\"select\">\n                    <option>English</option>\n                  </Form.Control>\n                </Form.Group>\n                <div className=\"text-center\">\n                  <Button type=\"submit\" variant=\"success\" className=\"card-button\">PLAY!</Button>\n                </div>\n              </Form>\n            </GameCard.Body>\n          </GameCard>\n          <GameCard className=\"card-bottom\">\n            <GameCard.Body className=\"text-center d-flex flex-column justify-content-around px-2\">\n              <div className=\"bottom-content\">\n                <FontAwesomeIcon icon={faUsers} className=\"mr-2\" />\n                Play with friends!\n              </div>\n              <Button type=\"submit\" variant=\"primary\" className=\"w-75 m-auto\" onClick={handleCreate}>CREATE ROOM!</Button>\n            </GameCard.Body>\n          </GameCard>\n        </Col>\n        <Col md=\"5\" className=\"home-card\">\n          <GameCard className=\"card-right p-4\">\n            <GameCard.Header className=\"subtitle\">Instructions:</GameCard.Header>\n            <GameCard.Body>\n              <ol className=\"instructions\">\n                <li>\n                  A random word, the &lsquo;password&rsquo;,\n                  will be generated and displayed to a player.\n                </li>\n                <li>The player will type a word related to the password.</li>\n                <li>Rest of the players will have to guess the &lsquo;password&rsquo;.</li>\n                <li>The earlier you guess, the higher you score.</li>\n                <li>You are allowed 4 hints.</li>\n                <li>A hint is a single word of atmost 25 letters.</li>\n                <li>More the number of hints you see, lesser the points.</li>\n                <li>\n                  <strong>Note:</strong>\n                  {' '}\n                  Check the browser console upon unexpected behaviour.\n                </li>\n              </ol>\n            </GameCard.Body>\n          </GameCard>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nHome.propTypes = {\n  roomId: propTypes.string.isRequired,\n  username: propTypes.string.isRequired,\n\n  joinRoom: propTypes.func.isRequired,\n  setRoomId: propTypes.func.isRequired,\n  setCreator: propTypes.func.isRequired,\n  setUsername: propTypes.func.isRequired,\n  setHasStarted: propTypes.func.isRequired,\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  Button,\n} from 'react-bootstrap';\nimport propTypes from 'prop-types';\n\nimport GameCard from './GameCard';\nimport '../assets/css/Chat.css';\n\nfunction Chat(props) {\n  const {\n    sendMessage: sm,\n    messageList,\n  } = props;\n\n  const [message, setMessage] = useState('');\n\n  const handleChange = ({ target }) => setMessage(target.value);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    sm(message);\n    setMessage('');\n  };\n\n  useEffect(() => {\n    const messages = document.getElementsByClassName('messages')[0];\n    messages.scrollTop = messages.scrollHeight;\n  }, [messageList]);\n\n  const renderMessages = () => (\n    messageList.map((msg) => (\n      <li key={msg.time}>\n        <strong>{msg.username}</strong>\n        :\n        {' '}\n        &nbsp;\n        {msg.message}\n        {msg.key}\n      </li>\n    ))\n  );\n\n  return (\n    <GameCard className=\"chat\">\n      <GameCard.Body className=\"d-flex flex-column justify-content-between\">\n        <ul className=\"messages mb-3\">\n          {renderMessages()}\n        </ul>\n        <Form onSubmit={sendMessage} className=\"send-message\">\n          <Row>\n            <Col>\n              <Form.Control type=\"text\" placeholder=\"Type your guess here!\" onChange={handleChange} value={message} />\n            </Col>\n            <Col xs=\"auto\">\n              <Button type=\"submit\" variant=\"success\">Send</Button>\n            </Col>\n          </Row>\n        </Form>\n      </GameCard.Body>\n    </GameCard>\n  );\n}\n\nChat.propTypes = {\n  sendMessage: propTypes.func.isRequired,\n\n  messageList: propTypes.arrayOf(propTypes.shape({\n    message: propTypes.string,\n    username: propTypes.string,\n    time: propTypes.string,\n  })).isRequired,\n};\n\nexport default Chat;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Row,\n  Col,\n} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-regular-svg-icons';\n\nimport GameCard from './GameCard';\n\nimport '../assets/css/PlayerList.css';\n\nfunction PlayerList(props) {\n  const {\n    players,\n    header,\n    footer,\n  } = props;\n\n  const userBox = (username, points, index, id) => (\n    <Row key={id} className=\"list-row py-2\">\n      <Col className=\"m-auto\"><FontAwesomeIcon icon={faUserCircle} size=\"3x\" /></Col>\n      <Col sm=\"auto\" className=\"user-col m-auto\">\n        <div className=\"list-username\">{username}</div>\n        <div className=\"list-points\">\n          Points:\n          {' '}\n          {points}\n        </div>\n      </Col>\n      <Col className=\"m-auto rank\">\n        #\n        {index + 1}\n      </Col>\n    </Row>\n  );\n\n  const renderHeader = () => {\n    if (!header) {\n      return <></>;\n    }\n\n    return <GameCard.Header className=\"text-center playerlist-header\">{header}</GameCard.Header>;\n  };\n\n  const renderFooter = () => {\n    if (!footer) {\n      return <></>;\n    }\n\n    return <GameCard.Footer className=\"text-center playerlist-footer\">{footer}</GameCard.Footer>;\n  };\n\n  return (\n    <GameCard className=\"chat\">\n      {renderHeader()}\n      <GameCard.Body className=\"text-center py-0\">\n        <div className=\"player-list\">{players.map((player, index) => userBox(player.username, player.points, index, player._id))}</div>\n      </GameCard.Body>\n      {renderFooter()}\n    </GameCard>\n  );\n}\n\nPlayerList.defaultProps = {\n  header: '',\n  footer: <></>,\n};\n\nPlayerList.propTypes = {\n  players: propTypes.arrayOf(propTypes.shape({\n    _id: propTypes.string,\n    username: propTypes.string,\n    points: propTypes.number,\n  })).isRequired,\n\n  header: propTypes.string,\n  footer: propTypes.node,\n};\n\nexport default PlayerList;\n","import React, { useState } from 'react';\nimport { Row, Col, Form } from 'react-bootstrap';\nimport propTypes from 'prop-types';\n\nimport GameCard from './GameCard';\n\nimport '../assets/css/Settings.css';\n\nfunction Settings(props) {\n  const { setRounds: liftRounds } = props;\n  const [rounds, setRounds] = useState(3);\n\n  const handleChange = ({ target }) => {\n    const value = Number(target.value);\n    if (!Number.isInteger(value)) return;\n    if (value > 9) return;\n    setRounds(value);\n    liftRounds(value);\n  };\n\n  return (\n    <GameCard className=\"mb-2 settings\">\n      <GameCard.Header className=\"settings-header text-center\">\n        Settings\n      </GameCard.Header>\n      <GameCard.Body>\n        <Row>\n          <Col className=\"rounds-text\"><strong>Rounds:</strong></Col>\n          <Col>\n            <Form.Control value={rounds} onChange={handleChange} />\n          </Col>\n        </Row>\n      </GameCard.Body>\n    </GameCard>\n\n  );\n}\n\nSettings.propTypes = {\n  setRounds: propTypes.func.isRequired,\n};\n\nexport default Settings;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n} from 'react-bootstrap';\nimport propTypes from 'prop-types';\n\nimport API from '../API';\nimport Chat from './Chat';\nimport Heading from './Heading';\nimport PlayerList from './PlayerList';\nimport Settings from './Settings';\n\nimport '../assets/css/WaitingRoom.css';\n\nfunction WaitingRoom(props) {\n  const {\n    username,\n    roomId,\n    players,\n    setRoomId,\n    sendMessage,\n    messageList,\n    startGame,\n  } = props;\n\n  const [currentRoom] = useState(roomId);\n  const history = useHistory();\n\n  const { room } = useParams();\n  useEffect(() => {\n    setRoomId(room);\n    if (!currentRoom) {\n      history.push('/');\n    }\n  }, [room, currentRoom, setRoomId, history]);\n\n  const [rounds, setRounds] = useState(3);\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    try {\n      const response = (await API.post('/game/start', { roomId, username, rounds })).data;\n      if (!response.success) {\n        console.error(response.message);\n        return;\n      }\n\n      if (!response.message.hasStarted) {\n        return;\n      }\n\n      startGame(roomId, username);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Container fluid className=\"lobby-container\">\n      <Heading />\n      <Row className=\"mt-4\">\n        <Col md className=\"lobby-players\">\n          <PlayerList\n            header=\"Joined\"\n            players={players}\n            footer={\n              <Button type=\"submit\" variant=\"success\" onClick={handleClick}>Play</Button>\n            }\n          />\n        </Col>\n        <Col className=\"d-flex flex-column\">\n          <Settings\n            setRounds={setRounds}\n          />\n          <Chat\n            className=\"lobby-chat\"\n            sendMessage={sendMessage}\n            messageList={messageList}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nWaitingRoom.propTypes = {\n  roomId: propTypes.string.isRequired,\n  username: propTypes.string.isRequired,\n\n  setRoomId: propTypes.func.isRequired,\n  startGame: propTypes.func.isRequired,\n  sendMessage: propTypes.func.isRequired,\n\n  messageList: propTypes.arrayOf(propTypes.shape({\n    time: propTypes.string,\n    message: propTypes.string,\n    username: propTypes.string,\n  })).isRequired,\n\n  players: propTypes.arrayOf(propTypes.shape({\n    _id: propTypes.string,\n    username: propTypes.string,\n    points: propTypes.number,\n  })).isRequired,\n};\n\nexport default WaitingRoom;\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStopwatch } from '@fortawesome/free-solid-svg-icons';\nimport propTypes from 'prop-types';\n\nimport GameCard from './GameCard';\n\nimport '../assets/css/Timer.css';\n\nfunction Timer(props) {\n  const {\n    roundEnd, currentRound, rounds, className,\n  } = props;\n\n  const calculateTimeLeft = () => {\n    const timeLeft = Math.floor((roundEnd - new Date().getTime()) / 1000);\n    if (timeLeft < 0) return 0;\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n\n  useEffect(() => {\n    const timeOut = setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n\n    return () => clearTimeout(timeOut);\n  });\n\n  return (\n    <GameCard className={className}>\n      <GameCard.Body className=\"timer text-center d-flex justify-content-center\">\n        <div className=\"left-timer py-2\">\n          <FontAwesomeIcon icon={faStopwatch} />\n          {' '}\n          {timeLeft}\n          s\n        </div>\n        <div className=\"right-rounds py-2\">\n          Round\n          {' '}\n          {currentRound}\n          {' '}\n          of\n          {' '}\n          {rounds}\n        </div>\n      </GameCard.Body>\n    </GameCard>\n  );\n}\n\nTimer.defaultProps = {\n  className: '',\n};\n\nTimer.propTypes = {\n  rounds: propTypes.number.isRequired,\n  roundEnd: propTypes.number.isRequired,\n  currentRound: propTypes.number.isRequired,\n\n  className: propTypes.string,\n};\n\nexport default Timer;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n} from 'react-bootstrap';\nimport propTypes from 'prop-types';\n\nimport Heading from './Heading';\nimport Chat from './Chat';\nimport PlayerList from './PlayerList';\nimport GameCard from './GameCard';\nimport API from '../API';\n\nimport '../assets/css/Game.css';\nimport Timer from './Timer';\n\nfunction Game(props) {\n  const {\n    username,\n    roomId,\n    players,\n    hints,\n    previousPassword,\n    currentPassword,\n    passwordLength,\n    currentRound,\n    passwordHolder,\n    sendMessage,\n    sendHint,\n    messageList,\n    fetchData,\n    solvedBy,\n    roundEnd,\n    rounds,\n  } = props;\n\n  const [hint, setHint] = useState('');\n\n  useEffect(() => {\n    const fetch = async () => { await fetchData(); };\n    fetch();\n  }, [fetchData]);\n\n  useEffect(() => {\n    if (solvedBy.length !== players.length - 1) return;\n    const fetch = async () => { await fetchData(); };\n    fetch();\n  }, [solvedBy, fetchData, players]);\n\n  useEffect(() => {\n    console.log('setting timeout ran');\n    const timeOut = setTimeout(async () => {\n      await fetchData();\n    }, roundEnd - new Date().getTime());\n\n    return () => clearTimeout(timeOut);\n  }, [fetchData, roundEnd]);\n\n  console.log(hints, previousPassword);\n  const handleChange = ({ target }) => setHint(target.value);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = (await API.post('/game/hint', {\n      username,\n      roomId,\n      hint,\n    })).data;\n\n    if (!response.success) {\n      console.error(response.message);\n      return;\n    }\n\n    sendHint(response.message.hints, roomId, username);\n    setHint('');\n  };\n\n  const renderBlanks = () => {\n    if (currentPassword) {\n      return (\n        <div className=\"current-password\">\n          {currentPassword}\n        </div>\n      );\n    }\n    const blanks = new Array(passwordLength).fill(\n      '_ ',\n    );\n    return blanks.map((blank) => blank);\n  };\n\n  const renderPreiviousHints = () => (hints.map((h, index) => (\n    <div key={Math.random().toString()}>\n      Hint\n      {' '}\n      {index + 1}\n      :\n      {' '}\n      {h}\n    </div>\n  ))\n  );\n\n  return (\n    <Container fluid className=\"game-container\">\n      <Heading />\n      <Row className=\"mt-4\">\n        <Col md>\n          <PlayerList\n            players={players}\n          />\n        </Col>\n        <Col md className=\"d-flex flex-column justify-content-center\">\n          <GameCard>\n            <GameCard.Body className=\"text-center password-card\">\n              <div>The Password is:</div>\n              <div className=\"blanks\">{renderBlanks()}</div>\n            </GameCard.Body>\n          </GameCard>\n          <GameCard className=\"mt-2\">\n            <GameCard.Body className=\"d-flex flex-column justify-content-between hint-card\">\n              <div className=\"hints\">\n                <div className=\"text-center\">\n                  <div className=\"hint-pretext\">The current hint is:</div>\n                  <div className=\"current-hint mb-2\">{hints.slice(-1)[0]}</div>\n                </div>\n                <div className=\"prev-hint-container\">\n                  {renderPreiviousHints()}\n                </div>\n              </div>\n              <Form onSubmit={handleSubmit} className=\"send-hint\">\n                <Row>\n                  <Col>\n                    <Form.Control\n                      type=\"text\"\n                      disabled={username !== passwordHolder}\n                      placeholder=\"Type the hint here!\"\n                      value={hint}\n                      onChange={handleChange}\n                    />\n                  </Col>\n                  <Col xs=\"auto\">\n                    <Button type=\"submit\" variant=\"success\">Send</Button>\n                  </Col>\n                </Row>\n              </Form>\n            </GameCard.Body>\n          </GameCard>\n          <Timer\n            className=\"mt-4 w-75 mx-auto\"\n            roundEnd={roundEnd}\n            rounds={rounds}\n            currentRound={currentRound}\n          />\n        </Col>\n        <Col className=\"game-chat\">\n          <Chat\n            sendMessage={sendMessage}\n            messageList={messageList}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nGame.propTypes = {\n  roomId: propTypes.string.isRequired,\n  username: propTypes.string.isRequired,\n  passwordHolder: propTypes.string.isRequired,\n  currentPassword: propTypes.string.isRequired,\n  previousPassword: propTypes.string.isRequired,\n\n  rounds: propTypes.number.isRequired,\n  roundEnd: propTypes.number.isRequired,\n  currentRound: propTypes.number.isRequired,\n  passwordLength: propTypes.number.isRequired,\n\n  sendHint: propTypes.func.isRequired,\n  fetchData: propTypes.func.isRequired,\n  sendMessage: propTypes.func.isRequired,\n\n  hints: propTypes.arrayOf(propTypes.string).isRequired,\n  solvedBy: propTypes.arrayOf(propTypes.string).isRequired,\n\n  messageList: propTypes.arrayOf(propTypes.shape({\n    time: propTypes.string,\n    message: propTypes.string,\n    username: propTypes.string,\n  })).isRequired,\n  players: propTypes.arrayOf(propTypes.shape({\n    _id: propTypes.string,\n    username: propTypes.string,\n    points: propTypes.number,\n  })).isRequired,\n};\n\nexport default Game;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport socketio from 'socket.io-client';\n\nimport Home from './components/Home';\nimport WaitingRoom from './components/WaitingRoom';\nimport Game from './components/Game';\n\nimport './assets/css/App.css';\nimport API from './API';\n\nconst socket = socketio(process.env.REACT_APP_SOCKET_SERVER);\n\nfunction App() {\n  const [username, setUsername] = useState(localStorage.getItem('username') || '');\n\n  useEffect(() => {\n    localStorage.setItem('username', username);\n  }, [username]);\n\n  const [roomId, setRoomId] = useState('');\n  const [creator, setCreator] = useState('');\n  const [passwordHolder, setPasswordHolder] = useState('');\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [previousPassword, setPreviousPassword] = useState('');\n\n  const [hints, setHints] = useState([]);\n  const [players, setPlayersState] = useState([]);\n  const [messageList, setMessageList] = useState([]);\n  const [solvedBy, setSolvedBy] = useState([]);\n\n  const [rounds, setRounds] = useState(0);\n  const [roundEnd, setRoundEnd] = useState(0);\n  const [currentRound, setCurrentRound] = useState(0);\n  const [passwordLength, setPasswordLength] = useState(0);\n\n  const [hasStarted, setHasStarted] = useState(false);\n\n  const setPlayers = (ps) => {\n    ps.sort((a, b) => b.points - a.points);\n    setPlayersState(ps);\n  };\n\n  useEffect(() => {\n    socket.on('message', (data) => {\n      const { username: u, message: m, time } = data;\n      setMessageList((messageL) => messageL.concat({ username: u, message: m, time }));\n    });\n\n    socket.on('join', (data) => {\n      const { players: ps } = data;\n      setPlayers(ps);\n    });\n\n    socket.on('start', (data) => {\n      const { hasStarted: hs } = data;\n      if (!hs) return;\n\n      setHasStarted(hs);\n    });\n\n    socket.on('correct', (data) => {\n      const { players: ps, solvedBy: sb } = data;\n      setPlayers(ps);\n      setSolvedBy(sb);\n    });\n\n    socket.on('hint', (data) => {\n      const { hints: h } = data;\n      console.log('RECEIVED HINT');\n      setHints(h);\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on('disconnect', (data) => {\n      const { username: u, creator: c } = data;\n      setPlayers(players.filter((p) => p.username !== u));\n      setCreator(c);\n    });\n  }, [players]);\n\n  const joinRoom = (u, r, ps) => {\n    if (!u || !r || !ps) return;\n    socket.emit('join', {\n      username: u,\n      roomId: r,\n      players: ps,\n    });\n  };\n\n  const sendMessage = (message) => {\n    if (!message) return;\n\n    socket.emit('message', {\n      username,\n      roomId,\n      message,\n    });\n  };\n\n  const sendHint = (h, r, u) => {\n    if (!h || !r || !u) return;\n    socket.emit('hint', {\n      passwordHolder,\n      hints: h,\n      roomId: r,\n      username: u,\n    });\n  };\n\n  const startGame = (r, u) => {\n    socket.emit('start', {\n      roomId: r,\n      username: u,\n    });\n  };\n\n  const fetchData = useCallback(async () => {\n    if (!username) return;\n\n    const response = (await API.post('/game/next', {\n      username,\n      roomId,\n    })).data;\n\n    if (!response.success) {\n      if (response.message === 'gameEnded') {\n        // eslint-disable-next-line no-alert\n        alert('Game Over!');\n      }\n\n      console.error(response.message);\n      return;\n    }\n\n    const {\n      hints: h,\n      rounds: r,\n      roundEnd: re,\n      currentRound: cr,\n      passwordHolder: ph,\n      passwordLength: pl,\n      currentPassword: cp,\n      previousPassword: pp,\n    } = response.message;\n\n    setHints(h);\n    setRounds(r);\n    setRoundEnd(re);\n    setCurrentRound(cr);\n    setPasswordLength(pl);\n    setPasswordHolder(ph);\n    setCurrentPassword(cp);\n    setPreviousPassword(pp);\n  }, [username, roomId]);\n\n  useEffect(() => {\n    socket.on('next', async () => {\n      await fetchData();\n    });\n  }, [fetchData]);\n\n  const playComponent = () => {\n    if (!hasStarted) {\n      return (\n        <WaitingRoom\n          roomId={roomId}\n          creator={creator}\n          players={players}\n          username={username}\n          startGame={startGame}\n          setRoomId={setRoomId}\n          sendMessage={sendMessage}\n          messageList={messageList}\n        />\n      );\n    }\n    return (\n      <Game\n        hints={hints}\n        roomId={roomId}\n        rounds={rounds}\n        players={players}\n        username={username}\n        sendHint={sendHint}\n        roundEnd={roundEnd}\n        solvedBy={solvedBy}\n        fetchData={fetchData}\n        sendMessage={sendMessage}\n        messageList={messageList}\n        currentRound={currentRound}\n        passwordHolder={passwordHolder}\n        passwordLength={passwordLength}\n        currentPassword={currentPassword}\n        previousPassword={previousPassword}\n      />\n    );\n  };\n\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={\n            () => (\n              <Home\n                roomId={roomId}\n                username={username}\n                joinRoom={joinRoom}\n                setRoomId={setRoomId}\n                setCreator={setCreator}\n                setUsername={setUsername}\n                setHasStarted={setHasStarted}\n              />\n            )\n          }\n        />\n\n        <Route\n          exact\n          path=\"/play/:room\"\n        >\n          {playComponent()}\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import {} from 'dotenv/config';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/title.7d7ce879.png\";"],"sourceRoot":""}